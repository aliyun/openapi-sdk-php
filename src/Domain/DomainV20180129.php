<?php

namespace AlibabaCloud\Domain;

use AlibabaCloud\ApiResolverTrait;

/**
 * Find the specified Api of the Domain based on the method name as the Api name.
 *
 * @package   AlibabaCloud\Domain
 *
 * @method static V20180129\AcknowledgeTaskResult acknowledgeTaskResult(array $options = [])
 * @method static V20180129\BatchFuzzyMatchDomainSensitiveWord batchFuzzyMatchDomainSensitiveWord(array $options = [])
 * @method static V20180129\CancelDomainVerification cancelDomainVerification(array $options = [])
 * @method static V20180129\CancelQualificationVerification cancelQualificationVerification(array $options = [])
 * @method static V20180129\CheckDomain checkDomain(array $options = [])
 * @method static V20180129\CheckDomainSunriseClaim checkDomainSunriseClaim(array $options = [])
 * @method static V20180129\CheckMaxYearOfServerLock checkMaxYearOfServerLock(array $options = [])
 * @method static V20180129\CheckProcessingServerLockApply checkProcessingServerLockApply(array $options = [])
 * @method static V20180129\CheckTransferInFeasibility checkTransferInFeasibility(array $options = [])
 * @method static V20180129\ConfirmTransferInEmail confirmTransferInEmail(array $options = [])
 * @method static V20180129\DeleteDomainGroup deleteDomainGroup(array $options = [])
 * @method static V20180129\DeleteEmailVerification deleteEmailVerification(array $options = [])
 * @method static V20180129\DeleteRegistrantProfile deleteRegistrantProfile(array $options = [])
 * @method static V20180129\EmailVerified emailVerified(array $options = [])
 * @method static V20180129\FuzzyMatchDomainSensitiveWord fuzzyMatchDomainSensitiveWord(array $options = [])
 * @method static V20180129\GetQualificationUploadPolicy getQualificationUploadPolicy(array $options = [])
 * @method static V20180129\ListEmailVerification listEmailVerification(array $options = [])
 * @method static V20180129\ListServerLock listServerLock(array $options = [])
 * @method static V20180129\LookupTmchNotice lookupTmchNotice(array $options = [])
 * @method static V20180129\PollTaskResult pollTaskResult(array $options = [])
 * @method static V20180129\QueryAdvancedDomainList queryAdvancedDomainList(array $options = [])
 * @method static V20180129\QueryChangeLogList queryChangeLogList(array $options = [])
 * @method static V20180129\QueryContactInfo queryContactInfo(array $options = [])
 * @method static V20180129\QueryDSRecord queryDSRecord(array $options = [])
 * @method static V20180129\QueryDnsHost queryDnsHost(array $options = [])
 * @method static V20180129\QueryDomainAdminDivision queryDomainAdminDivision(array $options = [])
 * @method static V20180129\QueryDomainByInstanceId queryDomainByInstanceId(array $options = [])
 * @method static V20180129\QueryDomainGroupList queryDomainGroupList(array $options = [])
 * @method static V20180129\QueryDomainList queryDomainList(array $options = [])
 * @method static V20180129\QueryDomainRealNameVerificationInfo queryDomainRealNameVerificationInfo(array $options = [])
 * @method static V20180129\QueryDomainSuffix queryDomainSuffix(array $options = [])
 * @method static V20180129\QueryEmailVerification queryEmailVerification(array $options = [])
 * @method static V20180129\QueryEnsAssociation queryEnsAssociation(array $options = [])
 * @method static V20180129\QueryFailReasonForDomainRealNameVerification queryFailReasonForDomainRealNameVerification(array $options = [])
 * @method static V20180129\QueryFailReasonForRegistrantProfileRealNameVerification queryFailReasonForRegistrantProfileRealNameVerification(array $options = [])
 * @method static V20180129\QueryFailingReasonListForQualification queryFailingReasonListForQualification(array $options = [])
 * @method static V20180129\QueryLocalEnsAssociation queryLocalEnsAssociation(array $options = [])
 * @method static V20180129\QueryQualificationDetail queryQualificationDetail(array $options = [])
 * @method static V20180129\QueryRegistrantProfileRealNameVerificationInfo queryRegistrantProfileRealNameVerificationInfo(array $options = [])
 * @method static V20180129\QueryRegistrantProfiles queryRegistrantProfiles(array $options = [])
 * @method static V20180129\QueryServerLock queryServerLock(array $options = [])
 * @method static V20180129\QueryTaskDetailHistory queryTaskDetailHistory(array $options = [])
 * @method static V20180129\QueryTaskDetailList queryTaskDetailList(array $options = [])
 * @method static V20180129\QueryTaskInfoHistory queryTaskInfoHistory(array $options = [])
 * @method static V20180129\QueryTaskList queryTaskList(array $options = [])
 * @method static V20180129\QueryTransferInByInstanceId queryTransferInByInstanceId(array $options = [])
 * @method static V20180129\QueryTransferInList queryTransferInList(array $options = [])
 * @method static V20180129\QueryTransferOutInfo queryTransferOutInfo(array $options = [])
 * @method static V20180129\RegistrantProfileRealNameVerification registrantProfileRealNameVerification(array $options = [])
 * @method static V20180129\ResendEmailVerification resendEmailVerification(array $options = [])
 * @method static V20180129\ResetQualificationVerification resetQualificationVerification(array $options = [])
 * @method static V20180129\SaveBatchDomainRemark saveBatchDomainRemark(array $options = [])
 * @method static V20180129\SaveBatchTaskForCreatingOrderActivate saveBatchTaskForCreatingOrderActivate(array $options = [])
 * @method static V20180129\SaveBatchTaskForCreatingOrderRedeem saveBatchTaskForCreatingOrderRedeem(array $options = [])
 * @method static V20180129\SaveBatchTaskForCreatingOrderRenew saveBatchTaskForCreatingOrderRenew(array $options = [])
 * @method static V20180129\SaveBatchTaskForCreatingOrderTransfer saveBatchTaskForCreatingOrderTransfer(array $options = [])
 * @method static V20180129\SaveBatchTaskForDomainNameProxyService saveBatchTaskForDomainNameProxyService(array $options = [])
 * @method static V20180129\SaveBatchTaskForModifyingDomainDns saveBatchTaskForModifyingDomainDns(array $options = [])
 * @method static V20180129\SaveBatchTaskForTransferProhibitionLock saveBatchTaskForTransferProhibitionLock(array $options = [])
 * @method static V20180129\SaveBatchTaskForUpdateProhibitionLock saveBatchTaskForUpdateProhibitionLock(array $options = [])
 * @method static V20180129\SaveBatchTaskForUpdatingContactInfoByNewContact saveBatchTaskForUpdatingContactInfoByNewContact(array $options = [])
 * @method static V20180129\SaveBatchTaskForUpdatingContactInfoByRegistrantProfileId saveBatchTaskForUpdatingContactInfoByRegistrantProfileId(array $options = [])
 * @method static V20180129\SaveDomainGroup saveDomainGroup(array $options = [])
 * @method static V20180129\SaveRegistrantProfile saveRegistrantProfile(array $options = [])
 * @method static V20180129\SaveSingleTaskForAddingDSRecord saveSingleTaskForAddingDSRecord(array $options = [])
 * @method static V20180129\SaveSingleTaskForApprovingTransferOut saveSingleTaskForApprovingTransferOut(array $options = [])
 * @method static V20180129\SaveSingleTaskForAssociatingEns saveSingleTaskForAssociatingEns(array $options = [])
 * @method static V20180129\SaveSingleTaskForCancelingTransferIn saveSingleTaskForCancelingTransferIn(array $options = [])
 * @method static V20180129\SaveSingleTaskForCancelingTransferOut saveSingleTaskForCancelingTransferOut(array $options = [])
 * @method static V20180129\SaveSingleTaskForCreatingDnsHost saveSingleTaskForCreatingDnsHost(array $options = [])
 * @method static V20180129\SaveSingleTaskForCreatingOrderActivate saveSingleTaskForCreatingOrderActivate(array $options = [])
 * @method static V20180129\SaveSingleTaskForCreatingOrderRedeem saveSingleTaskForCreatingOrderRedeem(array $options = [])
 * @method static V20180129\SaveSingleTaskForCreatingOrderRenew saveSingleTaskForCreatingOrderRenew(array $options = [])
 * @method static V20180129\SaveSingleTaskForCreatingOrderTransfer saveSingleTaskForCreatingOrderTransfer(array $options = [])
 * @method static V20180129\SaveSingleTaskForDeletingDSRecord saveSingleTaskForDeletingDSRecord(array $options = [])
 * @method static V20180129\SaveSingleTaskForDeletingDnsHost saveSingleTaskForDeletingDnsHost(array $options = [])
 * @method static V20180129\SaveSingleTaskForDisassociatingEns saveSingleTaskForDisassociatingEns(array $options = [])
 * @method static V20180129\SaveSingleTaskForDomainNameProxyService saveSingleTaskForDomainNameProxyService(array $options = [])
 * @method static V20180129\SaveSingleTaskForModifyingDSRecord saveSingleTaskForModifyingDSRecord(array $options = [])
 * @method static V20180129\SaveSingleTaskForModifyingDnsHost saveSingleTaskForModifyingDnsHost(array $options = [])
 * @method static V20180129\SaveSingleTaskForQueryingTransferAuthorizationCode saveSingleTaskForQueryingTransferAuthorizationCode(array $options = [])
 * @method static V20180129\SaveSingleTaskForSynchronizingDSRecord saveSingleTaskForSynchronizingDSRecord(array $options = [])
 * @method static V20180129\SaveSingleTaskForSynchronizingDnsHost saveSingleTaskForSynchronizingDnsHost(array $options = [])
 * @method static V20180129\SaveSingleTaskForTransferProhibitionLock saveSingleTaskForTransferProhibitionLock(array $options = [])
 * @method static V20180129\SaveSingleTaskForUpdateProhibitionLock saveSingleTaskForUpdateProhibitionLock(array $options = [])
 * @method static V20180129\SaveSingleTaskForUpdatingContactInfo saveSingleTaskForUpdatingContactInfo(array $options = [])
 * @method static V20180129\SaveTaskForSubmittingDomainDelete saveTaskForSubmittingDomainDelete(array $options = [])
 * @method static V20180129\SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredential saveTaskForSubmittingDomainRealNameVerificationByIdentityCredential(array $options = [])
 * @method static V20180129\SaveTaskForSubmittingDomainRealNameVerificationByRegistrantProfileID saveTaskForSubmittingDomainRealNameVerificationByRegistrantProfileID(array $options = [])
 * @method static V20180129\SaveTaskForUpdatingRegistrantInfoByIdentityCredential saveTaskForUpdatingRegistrantInfoByIdentityCredential(array $options = [])
 * @method static V20180129\SaveTaskForUpdatingRegistrantInfoByRegistrantProfileID saveTaskForUpdatingRegistrantInfoByRegistrantProfileID(array $options = [])
 * @method static V20180129\ScrollDomainList scrollDomainList(array $options = [])
 * @method static V20180129\SubmitEmailVerification submitEmailVerification(array $options = [])
 * @method static V20180129\TransferInCheckMailToken transferInCheckMailToken(array $options = [])
 * @method static V20180129\TransferInReenterTransferAuthorizationCode transferInReenterTransferAuthorizationCode(array $options = [])
 * @method static V20180129\TransferInRefetchWhoisEmail transferInRefetchWhoisEmail(array $options = [])
 * @method static V20180129\TransferInResendMailToken transferInResendMailToken(array $options = [])
 * @method static V20180129\UpdateDomainToDomainGroup updateDomainToDomainGroup(array $options = [])
 * @method static V20180129\VerifyContactField verifyContactField(array $options = [])
 * @method static V20180129\VerifyEmail verifyEmail(array $options = [])
 */
class DomainV20180129
{
    use ApiResolverTrait;

    /**
     * @var string
     */
    protected $namespace = 'AlibabaCloud\\Domain\\V20180129';
}
