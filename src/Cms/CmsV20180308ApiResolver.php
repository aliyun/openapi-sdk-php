<?php

namespace AlibabaCloud\Cms;

use AlibabaCloud\ApiResolverTrait;

/**
 * Find the specified Api of the Cms based on the method name as the Api name.
 *
 * @package   AlibabaCloud\Cms
 *
 * @method V20180308\AccessKeyGet accessKeyGet(array $options = [])
 * @method V20180308\AddMyGroupInstances addMyGroupInstances(array $options = [])
 * @method V20180308\ApplyMonitoringTemplate applyMonitoringTemplate(array $options = [])
 * @method V20180308\ApplyTemplate applyTemplate(array $options = [])
 * @method V20180308\CreateAlarm createAlarm(array $options = [])
 * @method V20180308\CreateMonitoringTemplate createMonitoringTemplate(array $options = [])
 * @method V20180308\CreateMyGroupAlertBatch createMyGroupAlertBatch(array $options = [])
 * @method V20180308\CreateMyGroups createMyGroups(array $options = [])
 * @method V20180308\CreateNotifyPolicy createNotifyPolicy(array $options = [])
 * @method V20180308\CreateTask createTask(array $options = [])
 * @method V20180308\DeleteAlarm deleteAlarm(array $options = [])
 * @method V20180308\DeleteCustomMetric deleteCustomMetric(array $options = [])
 * @method V20180308\DeleteEventRule deleteEventRule(array $options = [])
 * @method V20180308\DeleteEventTargets deleteEventTargets(array $options = [])
 * @method V20180308\DeleteGroupDynamicRule deleteGroupDynamicRule(array $options = [])
 * @method V20180308\DeleteMonitoringTemplate deleteMonitoringTemplate(array $options = [])
 * @method V20180308\DeleteMyGroupInstances deleteMyGroupInstances(array $options = [])
 * @method V20180308\DeleteMyGroups deleteMyGroups(array $options = [])
 * @method V20180308\DeleteNotifyPolicy deleteNotifyPolicy(array $options = [])
 * @method V20180308\DeleteTasks deleteTasks(array $options = [])
 * @method V20180308\DescribeAlarmHistory describeAlarmHistory(array $options = [])
 * @method V20180308\DescribeAlarms describeAlarms(array $options = [])
 * @method V20180308\DescribeAlarmsForDimensions describeAlarmsForDimensions(array $options = [])
 * @method V20180308\DescribeAlarmsForResources describeAlarmsForResources(array $options = [])
 * @method V20180308\DescribeContact describeContact(array $options = [])
 * @method V20180308\DescribeEventRule describeEventRule(array $options = [])
 * @method V20180308\DescribeISPAreaCity describeISPAreaCity(array $options = [])
 * @method V20180308\DescribeTaskDetail describeTaskDetail(array $options = [])
 * @method V20180308\DescribeTasks describeTasks(array $options = [])
 * @method V20180308\DisableActiveAlert disableActiveAlert(array $options = [])
 * @method V20180308\DisableAlarm disableAlarm(array $options = [])
 * @method V20180308\DisableEventRule disableEventRule(array $options = [])
 * @method V20180308\EnableActiveAlert enableActiveAlert(array $options = [])
 * @method V20180308\EnableAlarm enableAlarm(array $options = [])
 * @method V20180308\EnableEventRule enableEventRule(array $options = [])
 * @method V20180308\GetContacts getContacts(array $options = [])
 * @method V20180308\GetMonitoringTemplate getMonitoringTemplate(array $options = [])
 * @method V20180308\GetMyGroupAlert getMyGroupAlert(array $options = [])
 * @method V20180308\GetMyGroups getMyGroups(array $options = [])
 * @method V20180308\GetNotifyPolicy getNotifyPolicy(array $options = [])
 * @method V20180308\ListActiveAlertRule listActiveAlertRule(array $options = [])
 * @method V20180308\ListAlarm listAlarm(array $options = [])
 * @method V20180308\ListAlarmHistory listAlarmHistory(array $options = [])
 * @method V20180308\ListContactGroup listContactGroup(array $options = [])
 * @method V20180308\ListEventRules listEventRules(array $options = [])
 * @method V20180308\ListEventTargetsByRule listEventTargetsByRule(array $options = [])
 * @method V20180308\ListGroupDynamicRule listGroupDynamicRule(array $options = [])
 * @method V20180308\ListMonitoringTemplates listMonitoringTemplates(array $options = [])
 * @method V20180308\ListMyGroupCategories listMyGroupCategories(array $options = [])
 * @method V20180308\ListMyGroupInstances listMyGroupInstances(array $options = [])
 * @method V20180308\ListMyGroupInstancesDetails listMyGroupInstancesDetails(array $options = [])
 * @method V20180308\ListMyGroups listMyGroups(array $options = [])
 * @method V20180308\ListNotifyPolicy listNotifyPolicy(array $options = [])
 * @method V20180308\ListProductOfActiveAlert listProductOfActiveAlert(array $options = [])
 * @method V20180308\ModifyTask modifyTask(array $options = [])
 * @method V20180308\NodeInstall nodeInstall(array $options = [])
 * @method V20180308\NodeList nodeList(array $options = [])
 * @method V20180308\NodeProcessCreate nodeProcessCreate(array $options = [])
 * @method V20180308\NodeProcessDelete nodeProcessDelete(array $options = [])
 * @method V20180308\NodeProcesses nodeProcesses(array $options = [])
 * @method V20180308\NodeStatus nodeStatus(array $options = [])
 * @method V20180308\NodeStatusList nodeStatusList(array $options = [])
 * @method V20180308\NodeUninstall nodeUninstall(array $options = [])
 * @method V20180308\ProfileGet profileGet(array $options = [])
 * @method V20180308\ProfileSet profileSet(array $options = [])
 * @method V20180308\PutCustomMetric putCustomMetric(array $options = [])
 * @method V20180308\PutEvent putEvent(array $options = [])
 * @method V20180308\PutEventRule putEventRule(array $options = [])
 * @method V20180308\PutEventTargets putEventTargets(array $options = [])
 * @method V20180308\PutGroupDynamicRule putGroupDynamicRule(array $options = [])
 * @method V20180308\PutMetricAlarm putMetricAlarm(array $options = [])
 * @method V20180308\QueryCustomEventCount queryCustomEventCount(array $options = [])
 * @method V20180308\QueryCustomEventDetail queryCustomEventDetail(array $options = [])
 * @method V20180308\QueryCustomEventHistogram queryCustomEventHistogram(array $options = [])
 * @method V20180308\QueryCustomMetricList queryCustomMetricList(array $options = [])
 * @method V20180308\QueryErrorDistribution queryErrorDistribution(array $options = [])
 * @method V20180308\QueryMetricData queryMetricData(array $options = [])
 * @method V20180308\QueryMetricLast queryMetricLast(array $options = [])
 * @method V20180308\QueryMetricList queryMetricList(array $options = [])
 * @method V20180308\QueryMetricMeta queryMetricMeta(array $options = [])
 * @method V20180308\QueryMetricTop queryMetricTop(array $options = [])
 * @method V20180308\QueryProjectMeta queryProjectMeta(array $options = [])
 * @method V20180308\QueryStaticsAvailability queryStaticsAvailability(array $options = [])
 * @method V20180308\QueryStaticsErrorRate queryStaticsErrorRate(array $options = [])
 * @method V20180308\QueryStaticsResponseTime queryStaticsResponseTime(array $options = [])
 * @method V20180308\QuerySystemEventCount querySystemEventCount(array $options = [])
 * @method V20180308\QuerySystemEventDemo querySystemEventDemo(array $options = [])
 * @method V20180308\QuerySystemEventDetail querySystemEventDetail(array $options = [])
 * @method V20180308\QuerySystemEventHistogram querySystemEventHistogram(array $options = [])
 * @method V20180308\QueryTaskConfig queryTaskConfig(array $options = [])
 * @method V20180308\QueryTaskMonitorData queryTaskMonitorData(array $options = [])
 * @method V20180308\SendDryRunSystemEvent sendDryRunSystemEvent(array $options = [])
 * @method V20180308\StartTasks startTasks(array $options = [])
 * @method V20180308\StopTasks stopTasks(array $options = [])
 * @method V20180308\TaskConfigCreate taskConfigCreate(array $options = [])
 * @method V20180308\TaskConfigDelete taskConfigDelete(array $options = [])
 * @method V20180308\TaskConfigEnable taskConfigEnable(array $options = [])
 * @method V20180308\TaskConfigList taskConfigList(array $options = [])
 * @method V20180308\TaskConfigModify taskConfigModify(array $options = [])
 * @method V20180308\TaskConfigUnhealthy taskConfigUnhealthy(array $options = [])
 * @method V20180308\UpdateAlarm updateAlarm(array $options = [])
 * @method V20180308\UpdateMonitoringTemplate updateMonitoringTemplate(array $options = [])
 * @method V20180308\UpdateMyGroupAlert updateMyGroupAlert(array $options = [])
 * @method V20180308\UpdateMyGroupInstances updateMyGroupInstances(array $options = [])
 * @method V20180308\UpdateMyGroupMembers updateMyGroupMembers(array $options = [])
 * @method V20180308\UpdateMyGroups updateMyGroups(array $options = [])
 */
class CmsV20180308ApiResolver
{
    use ApiResolverTrait;

    /**
     * @var string
     */
    protected $namespace = 'AlibabaCloud\\Cms\\V20180308';
}
