<?php

namespace AlibabaCloud\Cms\V20180308;

use AlibabaCloud\ApiResolverTrait;

/**
 * Find the specified Api of the Cms based on the method name as the Api name.
 *
 * @package   AlibabaCloud\Cms\V20180308
 *
 * @method static AccessKeyGet accessKeyGet(array $options = [])
 * @method static AddMyGroupInstances addMyGroupInstances(array $options = [])
 * @method static ApplyMonitoringTemplate applyMonitoringTemplate(array $options = [])
 * @method static ApplyTemplate applyTemplate(array $options = [])
 * @method static CmsApiResolver cmsApiResolver(array $options = [])
 * @method static CreateAlarm createAlarm(array $options = [])
 * @method static CreateMonitoringTemplate createMonitoringTemplate(array $options = [])
 * @method static CreateMyGroupAlertBatch createMyGroupAlertBatch(array $options = [])
 * @method static CreateMyGroups createMyGroups(array $options = [])
 * @method static CreateNotifyPolicy createNotifyPolicy(array $options = [])
 * @method static CreateTask createTask(array $options = [])
 * @method static DeleteAlarm deleteAlarm(array $options = [])
 * @method static DeleteCustomMetric deleteCustomMetric(array $options = [])
 * @method static DeleteEventRule deleteEventRule(array $options = [])
 * @method static DeleteEventTargets deleteEventTargets(array $options = [])
 * @method static DeleteGroupDynamicRule deleteGroupDynamicRule(array $options = [])
 * @method static DeleteMonitoringTemplate deleteMonitoringTemplate(array $options = [])
 * @method static DeleteMyGroupInstances deleteMyGroupInstances(array $options = [])
 * @method static DeleteMyGroups deleteMyGroups(array $options = [])
 * @method static DeleteNotifyPolicy deleteNotifyPolicy(array $options = [])
 * @method static DeleteTasks deleteTasks(array $options = [])
 * @method static DescribeAlarmHistory describeAlarmHistory(array $options = [])
 * @method static DescribeAlarms describeAlarms(array $options = [])
 * @method static DescribeAlarmsForDimensions describeAlarmsForDimensions(array $options = [])
 * @method static DescribeAlarmsForResources describeAlarmsForResources(array $options = [])
 * @method static DescribeContact describeContact(array $options = [])
 * @method static DescribeEventRule describeEventRule(array $options = [])
 * @method static DescribeISPAreaCity describeISPAreaCity(array $options = [])
 * @method static DescribeTaskDetail describeTaskDetail(array $options = [])
 * @method static DescribeTasks describeTasks(array $options = [])
 * @method static DisableActiveAlert disableActiveAlert(array $options = [])
 * @method static DisableAlarm disableAlarm(array $options = [])
 * @method static DisableEventRule disableEventRule(array $options = [])
 * @method static EnableActiveAlert enableActiveAlert(array $options = [])
 * @method static EnableAlarm enableAlarm(array $options = [])
 * @method static EnableEventRule enableEventRule(array $options = [])
 * @method static GetContacts getContacts(array $options = [])
 * @method static GetMonitoringTemplate getMonitoringTemplate(array $options = [])
 * @method static GetMyGroupAlert getMyGroupAlert(array $options = [])
 * @method static GetMyGroups getMyGroups(array $options = [])
 * @method static GetNotifyPolicy getNotifyPolicy(array $options = [])
 * @method static ListActiveAlertRule listActiveAlertRule(array $options = [])
 * @method static ListAlarm listAlarm(array $options = [])
 * @method static ListAlarmHistory listAlarmHistory(array $options = [])
 * @method static ListContactGroup listContactGroup(array $options = [])
 * @method static ListEventRules listEventRules(array $options = [])
 * @method static ListEventTargetsByRule listEventTargetsByRule(array $options = [])
 * @method static ListGroupDynamicRule listGroupDynamicRule(array $options = [])
 * @method static ListMonitoringTemplates listMonitoringTemplates(array $options = [])
 * @method static ListMyGroupCategories listMyGroupCategories(array $options = [])
 * @method static ListMyGroupInstances listMyGroupInstances(array $options = [])
 * @method static ListMyGroupInstancesDetails listMyGroupInstancesDetails(array $options = [])
 * @method static ListMyGroups listMyGroups(array $options = [])
 * @method static ListNotifyPolicy listNotifyPolicy(array $options = [])
 * @method static ListProductOfActiveAlert listProductOfActiveAlert(array $options = [])
 * @method static ModifyTask modifyTask(array $options = [])
 * @method static NodeInstall nodeInstall(array $options = [])
 * @method static NodeList nodeList(array $options = [])
 * @method static NodeProcessCreate nodeProcessCreate(array $options = [])
 * @method static NodeProcessDelete nodeProcessDelete(array $options = [])
 * @method static NodeProcesses nodeProcesses(array $options = [])
 * @method static NodeStatus nodeStatus(array $options = [])
 * @method static NodeStatusList nodeStatusList(array $options = [])
 * @method static NodeUninstall nodeUninstall(array $options = [])
 * @method static ProfileGet profileGet(array $options = [])
 * @method static ProfileSet profileSet(array $options = [])
 * @method static PutCustomMetric putCustomMetric(array $options = [])
 * @method static PutEvent putEvent(array $options = [])
 * @method static PutEventRule putEventRule(array $options = [])
 * @method static PutEventTargets putEventTargets(array $options = [])
 * @method static PutGroupDynamicRule putGroupDynamicRule(array $options = [])
 * @method static PutMetricAlarm putMetricAlarm(array $options = [])
 * @method static QueryCustomEventCount queryCustomEventCount(array $options = [])
 * @method static QueryCustomEventDetail queryCustomEventDetail(array $options = [])
 * @method static QueryCustomEventHistogram queryCustomEventHistogram(array $options = [])
 * @method static QueryCustomMetricList queryCustomMetricList(array $options = [])
 * @method static QueryErrorDistribution queryErrorDistribution(array $options = [])
 * @method static QueryMetricData queryMetricData(array $options = [])
 * @method static QueryMetricLast queryMetricLast(array $options = [])
 * @method static QueryMetricList queryMetricList(array $options = [])
 * @method static QueryMetricMeta queryMetricMeta(array $options = [])
 * @method static QueryMetricTop queryMetricTop(array $options = [])
 * @method static QueryProjectMeta queryProjectMeta(array $options = [])
 * @method static QueryStaticsAvailability queryStaticsAvailability(array $options = [])
 * @method static QueryStaticsErrorRate queryStaticsErrorRate(array $options = [])
 * @method static QueryStaticsResponseTime queryStaticsResponseTime(array $options = [])
 * @method static QuerySystemEventCount querySystemEventCount(array $options = [])
 * @method static QuerySystemEventDemo querySystemEventDemo(array $options = [])
 * @method static QuerySystemEventDetail querySystemEventDetail(array $options = [])
 * @method static QuerySystemEventHistogram querySystemEventHistogram(array $options = [])
 * @method static QueryTaskConfig queryTaskConfig(array $options = [])
 * @method static QueryTaskMonitorData queryTaskMonitorData(array $options = [])
 * @method static SendDryRunSystemEvent sendDryRunSystemEvent(array $options = [])
 * @method static StartTasks startTasks(array $options = [])
 * @method static StopTasks stopTasks(array $options = [])
 * @method static TaskConfigCreate taskConfigCreate(array $options = [])
 * @method static TaskConfigDelete taskConfigDelete(array $options = [])
 * @method static TaskConfigEnable taskConfigEnable(array $options = [])
 * @method static TaskConfigList taskConfigList(array $options = [])
 * @method static TaskConfigModify taskConfigModify(array $options = [])
 * @method static TaskConfigUnhealthy taskConfigUnhealthy(array $options = [])
 * @method static UpdateAlarm updateAlarm(array $options = [])
 * @method static UpdateMonitoringTemplate updateMonitoringTemplate(array $options = [])
 * @method static UpdateMyGroupAlert updateMyGroupAlert(array $options = [])
 * @method static UpdateMyGroupInstances updateMyGroupInstances(array $options = [])
 * @method static UpdateMyGroupMembers updateMyGroupMembers(array $options = [])
 * @method static UpdateMyGroups updateMyGroups(array $options = [])
 */
class Cms
{
    use ApiResolverTrait;
}
